% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trajectories.R
\name{point_profiles_tidy}
\alias{point_profiles_tidy}
\title{Export point profile from NM trajectories}
\usage{
point_profiles_tidy(
  conn = NULL,
  wef,
  til = lubridate::today(tzone = "UTC"),
  profile = "CTFM",
  bbox = NULL
)
}
\arguments{
\item{conn}{Database connection or instantiate the default one.}

\item{wef}{\strong{W}ith \strong{EF}fect date (included) at Zulu time
in a format recognized by \code{\link[lubridate:as_date]{lubridate::as_datetime()}}}

\item{til}{un\strong{TIL}l date (excluded) at Zulu time
in a format recognized by \code{\link[lubridate:as_date]{lubridate::as_datetime()}}}

\item{profile}{the \href{https://ansperformance.eu/definition/flight-models/}{model of the trajectory}
profile (default: 'CTFM'), one of:
\itemize{
\item 'FTFM', Filed Tactical Flight Model
\item 'RTFM', Regulated Tactical Flight Model
\item 'CTFM', Current Tactical Flight Model
\item 'CPF', Correlated Position reports for a Flight
\item 'DCT', Direct route
\item 'SCR', Shortest Constrained Route
\item 'SRR', Shortest RAD restrictions applied Route
\item 'SUR', Shortest Unconstrained Route
}}

\item{bbox}{(Optional) axis aligned bounding box
(xmin, ymin, xmax, ymax)}
}
\value{
a dataframe representing a flight trajectory with the
following columns:
\itemize{
\item FLIGHT_ID: a unique identifier for the flight
\item TIME_OVER: the time over llon/lat
\item LONGITUDE: the longitude
\item LATITUDE: the latitude
\item FLIGHT_LEVEL: the \href{https://ansperformance.eu/acronym/fl/}{flight level}
\item POINT_ID: the published point ID ('NO_POINT' otherwise)
\item AIR_ROUTE: the air rout name ('DCT' otherwise)
\item LOBT: the \href{(https://ansperformance.eu/acronym/lobt/)}{last off-block time}
\item SEQ_ID: the progressive sequence number in the trajectory points
\item CALLSIGN: the \href{https://w.wiki/9XN6}{callsign} of the flight
\item REGISTRATION: the aircraft \href{https://w.wiki/9XN7}{registration}
\item MODEL_TYPE: the trajectory model as per \code{profile} input parameter
\item AIRCRAFT_TYPE: the ICAO aircraft type
\item AIRCRAFT_OPERATOR: the flight operator
\item ICAO24: the ICAO 24-bit address of the aircraft
\item ADEP: the Aerodrom of Departure
\item ADES: the aerodrome of Destination
}
}
\description{
Extract NM point profile trajectories from PRISME database.
When a bbox is defined, we return only the (full) point profiles for
the flights flying thru the region.
}
\section{Note}{
You need to either provide a connection \code{conn} that has access to as noted in
\code{\link[=airspace_profile_tbl]{airspace_profile_tbl()}} and \code{\link[=flights_tidy]{flights_tidy()}} or go with the default which uses
PRU_DEV to establish a \code{\link[=db_connection]{db_connection()}}.
}

\examples{
\dontrun{
# export 1 day of NM (planned) trajectories
point_profiles_tidy(wef = "2019-07-14", til = "2019-07-15", profile = "FTFM")

# export 2 hours of NM (flown) trajectories
point_profiles_tidy(wef = "2019-07-14 22:00", til = "2019-07-15")

# export 1 day of NM (flown) trajectories
point_profiles_tidy(wef = "2019-07-14", til = "2019-07-15", profile = "CTFM")

# export all CTFM trajectories within a bounding box 40 NM around EDDF
bb <- c(xmin = 7.536746, xmax = 9.604390, ymin = 49.36732, ymax = 50.69920)
point_profiles_tidy(wef = "2019-01-01 00:00", til = "2019-01-02 00:00", bbox = bb)


# if you re-use DB connections
conn <- eurocontrol::db_connection("PRU_DEV")
point_profiles_tidy(conn = conn, "2020-01-01")

# ... do something else with conn
# ...
# then manually close the connection to the DB
DBI::dbDisconnect(conn)
}
}
\concept{read/export}
