[{"path":"https://eurocontrol.github.io/eurocontrol/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 eurocontrol authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Enrico Spinielli. Author, maintainer. . Copyright holder, funder.","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Spinielli E (2023). eurocontrol: Helper functions EUROCONTROL useRs. https://eurocontrol.github.io/eurocontrol/, https://github.com/eurocontrol/eurocontrol.","code":"@Manual{,   title = {eurocontrol: Helper functions for EUROCONTROL useRs},   author = {Enrico Spinielli},   year = {2023},   note = {https://eurocontrol.github.io/eurocontrol/, https://github.com/eurocontrol/eurocontrol}, }"},{"path":"https://eurocontrol.github.io/eurocontrol/index.html","id":"the-eurocontrol-package","dir":"","previous_headings":"","what":"Helper functions for EUROCONTROL useRs","title":"Helper functions for EUROCONTROL useRs","text":"goal eurocontrol package provide helper functions Agency’s employees setup, data retrieval internal databases, … .","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Helper functions for EUROCONTROL useRs","text":"can install development version eurocontrol package GitHub : NOTE: package (hiddenly) depends ROracle package, please installed according guidelines published .","code":"# install.packages(\"devtools\") devtools::install_github(\"eurocontrol/eurocontrol\")"},{"path":"https://eurocontrol.github.io/eurocontrol/index.html","id":"setup","dir":"","previous_headings":"","what":"Setup","title":"Helper functions for EUROCONTROL useRs","text":"functions package access data internal Oracle schema. code relies relevant credentials stored specifically named environment variables. pattern environment variable names XXXX something like DEV, PROD, …","code":"PRU_XXXX_DBNAME  PRU_XXXX_PWD PRU_XXXX_USR"},{"path":"https://eurocontrol.github.io/eurocontrol/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Helper functions for EUROCONTROL useRs","text":"typical use case retrieve list flights operated area managed EUROCONTROL’s Network Manager. example flight list March 2023 can run (need access setup PRU_DEV schema):","code":"library(eurocontrol)  flights_tidy(wef = \"2023-01-01\", til = \"2023-04-01\")"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airlines_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a reference to the Airlines table — airlines_tbl","title":"Return a reference to the Airlines table — airlines_tbl","text":"returned dplyr::tbl() referencing airlines table PRISME. can use dplyr/dbplyr verbs filter, join, ... datasets. NOTE: need access PRU_DEV schema","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airlines_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a reference to the Airlines table — airlines_tbl","text":"","code":"airlines_tbl(con = NULL)"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airlines_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a reference to the Airlines table — airlines_tbl","text":"con DB connection used, NULL instantiate one.","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airlines_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a reference to the Airlines table — airlines_tbl","text":"tbl referencing Oracle table airlines","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airlines_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a reference to the Airlines table — airlines_tbl","text":"","code":"if (FALSE) { arl <- airlines_tbl() }"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airlines_tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Airline info including group affiliation — airlines_tidy","title":"Airline info including group affiliation — airlines_tidy","text":"data frame airline info :","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airlines_tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Airline info including group affiliation — airlines_tidy","text":"","code":"airlines_tidy(con = NULL)"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airlines_tidy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Airline info including group affiliation — airlines_tidy","text":"con Optional connection PRU_DEV schema.","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airlines_tidy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Airline info including group affiliation — airlines_tidy","text":"data frame airline info : * operator_code: airline's ICAO code, .e. OAL, * operator_name: airline's name, .e. Olympic, * operator_group: airline's affiliation group, .e. AEGEAN Group, * iso2c: ISO2C code airline's country, .e. GR, * eu: whether airlines EUROCONTROL's Member State (plus Kosovo), .e. TRUE.","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airlines_tidy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Airline info including group affiliation — airlines_tidy","text":"operator_code: airline's ICAO code, .e. OAL, operator_name: airline's name, .e. Olympic, operator_group: airline's affiliation group, .e. AEGEAN Group, iso2c: ISO2C code airline's country, .e. GR, eu: whether airlines EUROCONTROL's Member State (plus Kosovo), .e. TRUE.","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airlines_tidy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Airline info including group affiliation — airlines_tidy","text":"","code":"if (FALSE) { airlines_tidy() }"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airspace_profile_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a reference to the Airspace Profile table — airspace_profile_tbl","title":"Return a reference to the Airspace Profile table — airspace_profile_tbl","text":"returned dplyr::tbl() referencing airspace profiles table PRISME. can use dplyr/dbplyr verbs filter, join, ... datasets. NOTE: need access PRU_DEV schema","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airspace_profile_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a reference to the Airspace Profile table — airspace_profile_tbl","text":"","code":"airspace_profile_tbl(con = NULL)"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airspace_profile_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a reference to the Airspace Profile table — airspace_profile_tbl","text":"con DB connection used, NULL instantiate one.","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airspace_profile_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a reference to the Airspace Profile table — airspace_profile_tbl","text":"tbl referencing Oracle table airspace profiles","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airspace_profile_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a reference to the Airspace Profile table — airspace_profile_tbl","text":"","code":"if (FALSE) { prf <- airspace_profile_tbl() }"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airspace_profiles_tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide all airspace profile segments intersecting an interval of interest — airspace_profiles_tidy","title":"Provide all airspace profile segments intersecting an interval of interest — airspace_profiles_tidy","text":"returned tbl includes segments scheduled non-scheduled flights temporally intersecting right-opened interval [wef, til). General aviation, State, military sensitive flight excluded. NOTE: need access PRU_DEV schema","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airspace_profiles_tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide all airspace profile segments intersecting an interval of interest — airspace_profiles_tidy","text":"","code":"airspace_profiles_tidy(   con = NULL,   wef,   til,   airspace = \"FIR\",   profile = \"CTFM\" )"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airspace_profiles_tidy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide all airspace profile segments intersecting an interval of interest — airspace_profiles_tidy","text":"con DB connection used, NULL instantiate one. wef EFfect date (included) Zulu time format recognized lubridate::as_datetime() til uTILl date (excluded) Zulu time format recognized lubridate::as_datetime() airspace type airspace (default: 'FIR'), one : 'FIR' (Flight Information Region) 'NAS' (National Airspace) 'AUA' (ATC Unit Airspace) 'ES' (Elementary Sector) profile model trajectory profile (default: 'CTFM'), one : 'FTFM' 'RTFM' 'CTFM' 'CPF' 'DCT' 'SCR' 'SRR' 'SUR'","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airspace_profiles_tidy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide all airspace profile segments intersecting an interval of interest — airspace_profiles_tidy","text":"tbl following columns ID: called SAM ID, used internally PRISME SEQ_ID: sequence number segment relevant airspace profile ENTRY_TIME: time entry relevant airspace ENTRY_LON:  longitude entry relevant airspace ENTRY_LAT: latitude entry relevant airspace ENTRY_FL: flight level entry relevant airspace EXIT_TIME: time exit relevant airspace EXIT_LON: longitude exit relevant airspace EXIT_LAT: latitude exit relevant airspace EXIT_FL: flight level exit relevant airspace AIRSPACE_ID: airspace ID AIRSPACE_TYPE: airspace type per airspace input parameter MODEL_TYPE: trajectory model per profile input parameter","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/airspace_profiles_tidy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide all airspace profile segments intersecting an interval of interest — airspace_profiles_tidy","text":"","code":"if (FALSE) { asp_profs <- airspace_profiles_tidy(con = NULL, wef = \"2023-01-01\", til = \"2023-04-01\") }"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/db_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a connection to the relevant Oracle database — db_connection","title":"Provide a connection to the relevant Oracle database — db_connection","text":"Provide connection relevant Oracle database","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/db_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a connection to the relevant Oracle database — db_connection","text":"","code":"db_connection(schema = \"PRU_PROD\")"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/db_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide a connection to the relevant Oracle database — db_connection","text":"schema Oracle DB schema connect . Note: prefix environment variable credentials stored, like <schema>_USR, <schema>_PWD <schema>_DBNAME. Possible values PRU_PROD, PRU_DEV, PRU_TEST, ...","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/db_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a connection to the relevant Oracle database — db_connection","text":"DB connection","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/db_connection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide a connection to the relevant Oracle database — db_connection","text":"","code":"if (FALSE) { con <- db_connection() }"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/eurocontrol-package.html","id":null,"dir":"Reference","previous_headings":"","what":"eurocontrol: Helper functions for EUROCONTROL useRs — eurocontrol-package","title":"eurocontrol: Helper functions for EUROCONTROL useRs — eurocontrol-package","text":"helper functions package designed make easy, homogeneus transparent common tasks usually needed data analysts useRs EUROCONTROL.","code":""},{"path":[]},{"path":"https://eurocontrol.github.io/eurocontrol/reference/eurocontrol-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"eurocontrol: Helper functions for EUROCONTROL useRs — eurocontrol-package","text":"Maintainer: Enrico Spinielli enrico.spinielli@eurocontrol.int (ORCID) contributors: EUROCONTROL [copyright holder, funder]","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/flights_airspace_profiles_tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the flights list for the airspace profile segments intersecting an interval of interest — flights_airspace_profiles_tidy","title":"Extract the flights list for the airspace profile segments intersecting an interval of interest — flights_airspace_profiles_tidy","text":"returned tbl includes scheduled non-scheduled flights whose airspace segments temporally intersecting right-opened interval [wef, til). General aviation, State, military sensitive flight excluded. NOTE: need access PRU_DEV schema","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/flights_airspace_profiles_tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the flights list for the airspace profile segments intersecting an interval of interest — flights_airspace_profiles_tidy","text":"","code":"flights_airspace_profiles_tidy(   con = NULL,   wef,   til,   airspace = \"FIR\",   profile = \"CTFM\" )"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/flights_airspace_profiles_tidy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the flights list for the airspace profile segments intersecting an interval of interest — flights_airspace_profiles_tidy","text":"con DB connection used, NULL instantiate one. wef EFfect date (included) Zulu time format recognized lubridate::as_datetime() til uTILl date (excluded) Zulu time format recognized lubridate::as_datetime() airspace type airspace (default: 'FIR'), one : 'FIR' (Flight Information Region) 'NAS' (National Airspace) 'AUA' (ATC Unit Airspace) 'ES' (Elementary Sector) profile model trajectory profile (default: 'CTFM'), one : 'FTFM' 'RTFM' 'CTFM' 'CPF' 'DCT' 'SCR' 'SRR' 'SUR'","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/flights_airspace_profiles_tidy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the flights list for the airspace profile segments intersecting an interval of interest — flights_airspace_profiles_tidy","text":"tbl columns flights_tidy","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/flights_airspace_profiles_tidy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the flights list for the airspace profile segments intersecting an interval of interest — flights_airspace_profiles_tidy","text":"","code":"if (FALSE) { asp_profs <- flights_airspace_profiles_tidy(wef = \"2023-01-01\", til = \"2023-04-01\") }"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/flights_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a reference to the Flights table — flights_tbl","title":"Return a reference to the Flights table — flights_tbl","text":"returned dplyr::tbl() referencing flights table PRISME. can use dplyr/dbplyr verbs filter, join, ... datasets. NOTE: need access PRU_DEV schema","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/flights_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a reference to the Flights table — flights_tbl","text":"","code":"flights_tbl(con = NULL)"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/flights_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a reference to the Flights table — flights_tbl","text":"con DB connection used, NULL instantiate one.","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/flights_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a reference to the Flights table — flights_tbl","text":"tbl referencing Oracle table flight","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/flights_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a reference to the Flights table — flights_tbl","text":"","code":"if (FALSE) { arl <- flights_tbl() }"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/flights_tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a clean flights list in an interval — flights_tidy","title":"Extract a clean flights list in an interval — flights_tidy","text":"returned tbl includes scheduled non-scheduled flight right-opened interval [wef, til). General aviation, State, military sensitive flight excluded. NOTE: need access PRU_DEV schema","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/flights_tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a clean flights list in an interval — flights_tidy","text":"","code":"flights_tidy(con = NULL, wef, til)"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/flights_tidy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a clean flights list in an interval — flights_tidy","text":"con DB connection used, NULL instantiate one. wef EFfect date (included) Zulu time format recognized lubridate::as_datetime() til uTILl date (excluded) Zulu time format recognized lubridate::as_datetime()","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/flights_tidy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a clean flights list in an interval — flights_tidy","text":"tbl following columns FLT_UID: flight unique id LOBT: Last received -Block Time IOBT: Initial -Block Time AIRCRAFT_ID REGISTRATION: registration AIRCRAFT_TYPE_ICAO_ID FLT_RULES (see FPL Item 8): sets regulations flight operated . Possible values : IFR V VFR, Y first IFR thereafter VFR, Z first VFR thereafter IFR ICAO_FLT_TYPE (see FPL Item 8): flight type. Possible values (G, M aand X appear): S scheduled air service N non-scheduled air service G general aviation M military X preceding categories WK_TBL_CAT (see FPL Item 9): wake turbulence category, cab L LIGHT, .e. maximum certificated takeoff mass 7000 kg (15_500 lbs) less. M MEDIUM, .e maximum certificated takeoff mass less 136_000 kg (300_000 lbs), 7_000 kg (15_500 lbs) H HEAVY, .e. maximum certificated takeoff mass 136_000 kg (300_000 lbs) (except specified J) J SUPER, presently AIRBUS -380-800 AIRCRAFT_OPERATOR: AIRCRAFT_ADDRESS: ICAO 24-bit address airframe ADS-B/Mode S broadcasting ADEP: (ICAO code ) Aerodrome DEParture ADES: (ICAO code ) Aerodrome DEStination ID: called SAM ID, used internally PRISME EOBT_1: Estimated -Block Time FPL-based (M1) trajectory ARVT_1: ARriVal Time FPL-based (M1) trajectory TAXI_TIME_1: Taxi time FPL-based (M1) trajectory AOBT_3: Actual -Block Time flown (M3) trajectory ARVT_3: ARVival Time flown (M3) trajectory TAXI_TIME_3: Taxi time flown (M3) trajectory RULE_NAME: market segment type AO_GRP_CODE: Aircraft Operator group (code) AO_GRP_NAME: : Aircraft Operator group (name) RTE_LEN_1: route length (NM) FPL-based (M1) trajectory RTE_LEN_3: route length (NM) flown (M3) trajectory","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/flights_tidy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a clean flights list in an interval — flights_tidy","text":"","code":"if (FALSE) { my_flts <- flights_tidy(wef = \"2023-01-01\", til = \"2023-04-01\") }"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/member_states.html","id":null,"dir":"Reference","previous_headings":"","what":"EUROCONTROL's Member States — member_states","title":"EUROCONTROL's Member States — member_states","text":"data frame following fields name country name, e.g. \"Italy\" iso3c 3-letter ISO code, e.g. \"ITA\" iso2c 2-letter ISO code, e.g. \"\" icao 2-letter ICAO code, e.g. \"LI\" iso3n 3-digits ISO code, e.g. \"380\" date date status code, e.g. 1996-04-01 status status code, e.g. \"M\" (M Member State, C Comprehensive Agreement State, T Transitional State) useful grab right spatial polygons case need. Note: Kosovo also included list.","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/member_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EUROCONTROL's Member States — member_states","text":"","code":"member_states"},{"path":"https://eurocontrol.github.io/eurocontrol/reference/member_states.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"EUROCONTROL's Member States — member_states","text":"object class tbl_df (inherits tbl, data.frame) 45 rows 7 columns.","code":""},{"path":"https://eurocontrol.github.io/eurocontrol/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way.   enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions).   simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[.   Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround.   Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually :   Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"}]
